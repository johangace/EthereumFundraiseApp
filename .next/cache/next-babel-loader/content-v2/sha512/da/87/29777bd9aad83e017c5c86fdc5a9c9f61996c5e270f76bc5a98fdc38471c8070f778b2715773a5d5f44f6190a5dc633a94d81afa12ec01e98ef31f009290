{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/campaigns/show.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Card } from 'semantic-ui-react';\nexport var __N_SSP = true;\nexport default function CampaignShow(props) {\n  var _this$props = this.props,\n      campaignAddress = _this$props.campaignAddress,\n      minimumContribution = _this$props.minimumContribution,\n      balance = _this$props.balance,\n      requestCount = _this$props.requestCount,\n      approversCount = _this$props.approversCount,\n      manager = _this$props.manager;\n\n  function renderCards() {\n    var items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create spending/withdraw requests'\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum contribution to the campaign'\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [this.campaignAddress, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), this.renderCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n} // export default class CampaignShow extends Component {\n//   constructor(props) {\n//     super(props)\n//   }\n//   renderCards() {\n//     const items = [\n//       {\n//         header: manager,\n//         meta: 'Address of Manager',\n//         description:\n//           'The manager created this campaign and can create spending/withdraw requests',\n//       },\n//       {\n//         header: minimumContribution,\n//         meta: 'Minimum contribution to the campaign',\n//       },\n//     ]\n//     return <Card.Group items={items} />\n//   }\n//   render() {\n//     return (\n//       <Layout>\n//         <h1>{this.campaignAddress} </h1>\n//         {/* Campaign Minimum: {minimumContribution}\n//         Balance: {balance}\n//         Requests: {requestCount}\n//         Approvers: {approversCount}\n//         Manager: {manager} */}\n//         {this.renderCards()}\n//       </Layout>\n//     )\n//   }\n// }\n\n_c = CampaignShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampaignShow\");","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Card","CampaignShow","props","campaignAddress","minimumContribution","balance","requestCount","approversCount","manager","renderCards","items","header","meta","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,IAAT,QAAqB,mBAArB;;AAsBA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBAQtC,KAAKA,KARiC;AAAA,MAExCC,eAFwC,eAExCA,eAFwC;AAAA,MAGxCC,mBAHwC,eAGxCA,mBAHwC;AAAA,MAIxCC,OAJwC,eAIxCA,OAJwC;AAAA,MAKxCC,YALwC,eAKxCA,YALwC;AAAA,MAMxCC,cANwC,eAMxCA,cANwC;AAAA,MAOxCC,OAPwC,eAOxCA,OAPwC;;AAS1C,WAASC,WAAT,GAAuB;AACrB,QAAMC,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEH,OADV;AAEEI,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT;AAJJ,KADY,EAQZ;AACEF,MAAAA,MAAM,EAAEP,mBADV;AAEEQ,MAAAA,IAAI,EAAE;AAFR,KARY,CAAd;AAaA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA,iBAAK,KAAKP,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOG,KAAKM,WAAL,EAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAzEwBR,Y","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport Campaign from '../../ethereum/campaign'\nimport { Card } from 'semantic-ui-react'\n\nexport const getServerSideProps = async (context) => {\n  const campaignAddress = context.query.address\n  // query the data based on the address and return as props\n  const campaign = Campaign(campaignAddress)\n\n  const summary = await campaign.methods.getSummary().call()\n\n  return {\n    props: {\n      campaignAddress,\n      minimumContribution: summary[0],\n      balance: summary[0],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    },\n    // queried data\n  }\n}\n\nexport default function CampaignShow(props) {\n  const {\n    campaignAddress,\n    minimumContribution,\n    balance,\n    requestCount,\n    approversCount,\n    manager,\n  } = this.props\n  function renderCards() {\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of Manager',\n        description:\n          'The manager created this campaign and can create spending/withdraw requests',\n      },\n\n      {\n        header: minimumContribution,\n        meta: 'Minimum contribution to the campaign',\n      },\n    ]\n    return <Card.Group items={items} />\n  }\n  return (\n    <Layout>\n      <h1>{this.campaignAddress} </h1>\n      {/* Campaign Minimum: {minimumContribution}\n        Balance: {balance}\n        Requests: {requestCount}\n        Approvers: {approversCount}\n        Manager: {manager} */}\n      {this.renderCards()}\n    </Layout>\n  )\n}\n\n// export default class CampaignShow extends Component {\n//   constructor(props) {\n//     super(props)\n//   }\n\n//   renderCards() {\n//     const items = [\n//       {\n//         header: manager,\n//         meta: 'Address of Manager',\n//         description:\n//           'The manager created this campaign and can create spending/withdraw requests',\n//       },\n\n//       {\n//         header: minimumContribution,\n//         meta: 'Minimum contribution to the campaign',\n//       },\n//     ]\n//     return <Card.Group items={items} />\n//   }\n\n//   render() {\n//     return (\n//       <Layout>\n//         <h1>{this.campaignAddress} </h1>\n//         {/* Campaign Minimum: {minimumContribution}\n//         Balance: {balance}\n//         Requests: {requestCount}\n//         Approvers: {approversCount}\n//         Manager: {manager} */}\n//         {this.renderCards()}\n//       </Layout>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}