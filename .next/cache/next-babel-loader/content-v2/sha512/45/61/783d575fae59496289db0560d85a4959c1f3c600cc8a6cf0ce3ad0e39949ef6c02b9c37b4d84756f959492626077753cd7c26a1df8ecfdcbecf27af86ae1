{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/index.js\";\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from 'semantic-ui-react';\nimport Layout from './components/Layout';\nimport { Link } from '../routes';\nimport db from '../db';\nimport { json } from 'body-parser';\nexport async function fetcher(req, res) {\n  const id = req.query.id; // filter API requests by method\n\n  if (req.method === 'GET') {\n    // Allow a blog post to get its number of likes and views\n    const params = {\n      TableName: 'leaper',\n      Key: {\n        CustomerId: 1\n      }\n    };\n    db.get(params, function (err, data) {\n      if (err) {\n        console.log('Error', err);\n      } else {\n        // send the json response from the callback\n        res.json(data.Item);\n      }\n    });\n  }\n}\nexport async function getStaticProps(context) {\n  const campaigns = await factory.methods.getDeployedCampaigns().call();\n\n  if (!campaigns) {\n    return {\n      notFound: true\n    };\n  }\n\n  fetcher; // const params = {\n  //   TableName: 'leaper',\n  //   Key: {\n  //     CustomerId: 1,\n  //   },\n  // }\n  // let Thedata = {}\n\n  let TheMain = db.get(params, function (err, data) {\n    if (err) {\n      console.log('Error', err);\n    } else {\n      // send the json response from the callback\n      let thedata = data.Item;\n      console.log(data.Item);\n      return JSON.parse(JSON.stringify(data.Item)); // data.Item\n    }\n  }); // const res = db.get(params)\n  // const Thedata = res.console.log(Thedata.Item)\n\n  return {\n    // will be passed to the page component as props\n    props: {\n      campaigns,\n      TheMain\n    }\n  }; // - At most once every second\n  //, revalidate: 1, // In seconds\n}\nexport default class CampaignIndex extends Component {\n  renderCampaigns() {\n    const items = this.props.campaigns.map(address => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(Link, {\n          route: `/campaigns/${address}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \" View Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      style: {\n        overflowWrap: 'break-word'\n      },\n      items: items\n    }, items.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    console.log(this.props.Thedata);\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Open Campaigns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), this.props.Data, /*#__PURE__*/_jsxDEV(Link, {\n          route: \"/campaigns/new\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              labelPosition: \"left\",\n              content: \"Create a Campaign\",\n              icon: \"add\",\n              primary: true,\n              floated: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), this.renderCampaigns(), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","Link","db","json","fetcher","req","res","id","query","method","params","TableName","Key","CustomerId","get","err","data","console","log","Item","getStaticProps","context","campaigns","methods","getDeployedCampaigns","call","notFound","TheMain","thedata","JSON","parse","stringify","props","CampaignIndex","renderCampaigns","items","map","address","header","description","fluid","overflowWrap","render","Thedata","Data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport factory from '../ethereum/factory'\nimport { Card, Button } from 'semantic-ui-react'\nimport Layout from './components/Layout'\nimport { Link } from '../routes'\nimport db from '../db'\nimport { json } from 'body-parser'\n\nexport async function fetcher(req, res) {\n  const id = req.query.id\n  // filter API requests by method\n  if (req.method === 'GET') {\n    // Allow a blog post to get its number of likes and views\n    const params = {\n      TableName: 'leaper',\n      Key: {\n        CustomerId: 1,\n      },\n    }\n\n    db.get(params, function (err, data) {\n      if (err) {\n        console.log('Error', err)\n      } else {\n        // send the json response from the callback\n        res.json(data.Item)\n      }\n    })\n  }\n}\nexport async function getStaticProps(context) {\n  const campaigns = await factory.methods.getDeployedCampaigns().call()\n\n  if (!campaigns) {\n    return {\n      notFound: true,\n    }\n  }\n  fetcher\n  // const params = {\n  //   TableName: 'leaper',\n  //   Key: {\n  //     CustomerId: 1,\n  //   },\n  // }\n\n  // let Thedata = {}\n  let TheMain = db.get(params, function (err, data) {\n    if (err) {\n      console.log('Error', err)\n    } else {\n      // send the json response from the callback\n      let thedata = data.Item\n      console.log(data.Item)\n      return JSON.parse(JSON.stringify(data.Item))\n      // data.Item\n    }\n  })\n\n  // const res = db.get(params)\n\n  // const Thedata = res.console.log(Thedata.Item)\n  return {\n    // will be passed to the page component as props\n    props: { campaigns, TheMain },\n  }\n  // - At most once every second\n  //, revalidate: 1, // In seconds\n}\n\nexport default class CampaignIndex extends Component {\n  renderCampaigns() {\n    const items = this.props.campaigns.map((address) => {\n      return {\n        header: address,\n        description: (\n          <Link route={`/campaigns/${address}`}>\n            <a> View Campaign</a>\n          </Link>\n        ),\n        fluid: true,\n      }\n    })\n    return (\n      <Card.Group\n        style={{ overflowWrap: 'break-word' }}\n        key={items.address}\n        items={items}\n      />\n    )\n  }\n  render() {\n    console.log(this.props.Thedata)\n    return (\n      <Layout>\n        {' '}\n        <div>\n          <h3> Open Campaigns</h3>\n          {this.props.Data}\n          <Link route=\"/campaigns/new\">\n            <a>\n              <Button\n                labelPosition=\"left\"\n                content=\"Create a Campaign\"\n                icon=\"add\"\n                primary\n                floated=\"right\"\n              />\n            </a>\n          </Link>\n        </div>\n        {this.renderCampaigns()}{' '}\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}