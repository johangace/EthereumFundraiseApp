{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/campaigns/show.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid, Button, Row } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../components/ContributeForm';\nimport { Link } from '../../routes';\nexport const getServerSideProps = async context => {\n  const address = context.query.address; // query the data based on the address and return as props\n\n  const campaign = Campaign(address);\n  const summary = await campaign.methods.getSummary().call();\n  return {\n    props: {\n      address,\n      minimumContribution: summary[0],\n      balance: summary[0],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    } // queried data\n\n  };\n};\nexport default function CampaignShow(props) {\n  const {\n    address,\n    minimumContribution,\n    balance,\n    requestCount,\n    approversCount,\n    manager\n  } = props;\n\n  function renderCards() {\n    const items = [// {\n    //   header: manager,\n    //   meta: 'Address of Manager',\n    //   description:\n    //     'The manager created this campaign and can create spending/withdraw requests',\n    //   style: { overflowWrap: 'break-word' },\n    // },\n    {\n      header: web3.utils.fromWei(minimumContribution, 'ether'),\n      meta: 'Minimum contribution (ETH)',\n      description: `You must contribute at least ${minimumContribution} ETH to become an approver `\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (ETH)',\n      description: 'Remaining Balance of the campaign'\n    }, {\n      header: requestCount,\n      meta: 'Number of Requests ',\n      description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers.'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people who donated to the campaign and can approve a request.'\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items,\n      center: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Campaign \", address, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 11,\n        children: [' ', /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" Campaign Manager: \", manager]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), renderCards(), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            route: `/campaigns/${address}/requests`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                labelPosition: \"left\",\n                content: \"View Requests\",\n                icon: \"eye\",\n                primary: true,\n                floated: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 5,\n        children: [' ', /*#__PURE__*/_jsxDEV(ContributeForm, {\n          address: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","Button","Row","web3","ContributeForm","Link","getServerSideProps","context","address","query","campaign","summary","methods","getSummary","call","props","minimumContribution","balance","requestCount","approversCount","manager","CampaignShow","renderCards","items","header","utils","fromWei","meta","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport Campaign from '../../ethereum/campaign'\nimport { Card, Grid, Button, Row } from 'semantic-ui-react'\nimport web3 from '../../ethereum/web3'\nimport ContributeForm from '../components/ContributeForm'\nimport { Link } from '../../routes'\nexport const getServerSideProps = async (context) => {\n  const address = context.query.address\n  // query the data based on the address and return as props\n  const campaign = Campaign(address)\n\n  const summary = await campaign.methods.getSummary().call()\n\n  return {\n    props: {\n      address,\n      minimumContribution: summary[0],\n      balance: summary[0],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    },\n    // queried data\n  }\n}\n\nexport default function CampaignShow(props) {\n  const {\n    address,\n    minimumContribution,\n    balance,\n    requestCount,\n    approversCount,\n    manager,\n  } = props\n  function renderCards() {\n    const items = [\n      // {\n      //   header: manager,\n      //   meta: 'Address of Manager',\n      //   description:\n      //     'The manager created this campaign and can create spending/withdraw requests',\n      //   style: { overflowWrap: 'break-word' },\n      // },\n      {\n        header: web3.utils.fromWei(minimumContribution, 'ether'),\n        meta: 'Minimum contribution (ETH)',\n        description: `You must contribute at least ${minimumContribution} ETH to become an approver `,\n      },\n      {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign Balance (ETH)',\n        description: 'Remaining Balance of the campaign',\n      },\n      {\n        header: requestCount,\n        meta: 'Number of Requests ',\n        description:\n          'A request tries to withdraw money from the contract. Requests must be approved by approvers.',\n      },\n      {\n        header: approversCount,\n        meta: 'Number of Approvers',\n        description:\n          'Number of people who donated to the campaign and can approve a request.',\n      },\n    ]\n    return <Card.Group items={items} center />\n  }\n\n  return (\n    <Layout>\n      <h1> Campaign {address} </h1>\n\n      <Grid>\n        <Grid.Column width={11}>\n          {' '}\n          <h4> Campaign Manager: {manager}</h4>\n          {renderCards()}\n          <Row>\n            <Link route={`/campaigns/${address}/requests`}>\n              <a>\n                <Button\n                  labelPosition=\"left\"\n                  content=\"View Requests\"\n                  icon=\"eye\"\n                  primary\n                  floated=\"left\"\n                />\n              </a>\n            </Link>\n          </Row>\n        </Grid.Column>\n\n        <Grid.Column width={5}>\n          {' '}\n          <ContributeForm address={address} />\n        </Grid.Column>\n      </Grid>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}