{"ast":null,"code":"import _regeneratorRuntime from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// const baseUrl = process.env.BASE_URL\nvar baseUrl = 'https://3k8qtydd9g.execute-api.us-east-1.amazonaws.com/';\n\nfunction fetchQuery(_x) {\n  return _fetchQuery.apply(this, arguments);\n}\n\nfunction _fetchQuery() {\n  _fetchQuery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path) {\n    var params,\n        url,\n        response,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n\n            if (params !== null) {\n              url = \"\".concat(baseUrl, \"/\").concat(path, \"/\").concat(params);\n            } else {\n              url = \"\".concat(baseUrl, \"/\").concat(path);\n            }\n\n            _context.next = 4;\n            return fetch(\"\".concat(url));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchQuery.apply(this, arguments);\n}\n\nfunction postData() {\n  return _postData.apply(this, arguments);\n} // postData('https://example.com/answer', { answer: 42 }).then((data) => {\n//   console.log(data) // JSON data parsed by `data.json()` call\n// })\n\n\nfunction _postData() {\n  _postData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var data,\n        response,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n            _context2.next = 3;\n            return fetch(baseUrl, {\n              mode: {\n                mode: 'no-cors'\n              },\n              credentials: 'include',\n              headers: typeof Headers !== 'undefined' ? new Headers({\n                'content-type': 'application/x-www-form-urlencoded'\n              }) : {\n                'content-type': 'application/x-www-form-urlencoded'\n              },\n              method: 'PUT',\n              // *GET, POST, PUT, DELETE, etc.\n              body: JSON.stringify(data) // mode: 'no-cors', // body data type must match \"Content-Type\" header\n\n            });\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.json());\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _postData.apply(this, arguments);\n}\n\nexport { baseUrl, fetchQuery, postData };","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/utils.js"],"names":["baseUrl","fetchQuery","path","params","url","fetch","response","json","data","postData","mode","credentials","headers","Headers","method","body","JSON","stringify"],"mappings":";;AAAA;AACA,IAAMA,OAAO,GAAG,yDAAhB;;SACeC,U;;;;;yEAAf,iBAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCC,YAAAA,MAAhC,2DAAyC,IAAzC;;AAEE,gBAAIA,MAAM,KAAK,IAAf,EAAqB;AACnBC,cAAAA,GAAG,aAAMJ,OAAN,cAAiBE,IAAjB,cAAyBC,MAAzB,CAAH;AACD,aAFD,MAEO;AACLC,cAAAA,GAAG,aAAMJ,OAAN,cAAiBE,IAAjB,CAAH;AACD;;AANH;AAAA,mBAOyBG,KAAK,WAAID,GAAJ,EAP9B;;AAAA;AAOQE,YAAAA,QAPR;AAAA;AAAA,mBAQqBA,QAAQ,CAACC,IAAT,EARrB;;AAAA;AAQQC,YAAAA,IARR;AAAA,6CASSA,IATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAYeC,Q;;EAgBf;AACA;AACA;;;;uEAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBD,YAAAA,IAAxB,8DAA+B,EAA/B;AAAA;AAAA,mBAEyBH,KAAK,CAACL,OAAD,EAAU;AACpCU,cAAAA,IAAI,EAAE;AAAEA,gBAAAA,IAAI,EAAE;AAAR,eAD8B;AAEpCC,cAAAA,WAAW,EAAE,SAFuB;AAGpCC,cAAAA,OAAO,EACL,OAAOC,OAAP,KAAmB,WAAnB,GACI,IAAIA,OAAJ,CAAY;AAAE,gCAAgB;AAAlB,eAAZ,CADJ,GAEI;AAAE,gCAAgB;AAAlB,eAN8B;AAOpCC,cAAAA,MAAM,EAAE,KAP4B;AAOrB;AACfC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAR8B,CASpC;;AAToC,aAAV,CAF9B;;AAAA;AAEQF,YAAAA,QAFR;AAAA,8CAaSA,QAAQ,CAACC,IAAT,EAbT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAoBA,SAASP,OAAT,EAAkBC,UAAlB,EAA8BQ,QAA9B","sourcesContent":["// const baseUrl = process.env.BASE_URL\nconst baseUrl = 'https://3k8qtydd9g.execute-api.us-east-1.amazonaws.com/'\nasync function fetchQuery(path, params = null) {\n  let url\n  if (params !== null) {\n    url = `${baseUrl}/${path}/${params}`\n  } else {\n    url = `${baseUrl}/${path}`\n  }\n  const response = await fetch(`${url}`)\n  const data = await response.json()\n  return data\n}\n\nasync function postData(data = {}) {\n  // Default options are marked with *\n  const response = await fetch(baseUrl, {\n    mode: { mode: 'no-cors' },\n    credentials: 'include',\n    headers:\n      typeof Headers !== 'undefined'\n        ? new Headers({ 'content-type': 'application/x-www-form-urlencoded' })\n        : { 'content-type': 'application/x-www-form-urlencoded' },\n    method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n    body: JSON.stringify(data),\n    // mode: 'no-cors', // body data type must match \"Content-Type\" header\n  })\n  return response.json() // parses JSON response into native JavaScript objects\n}\n\n// postData('https://example.com/answer', { answer: 42 }).then((data) => {\n//   console.log(data) // JSON data parsed by `data.json()` call\n// })\n\nexport { baseUrl, fetchQuery, postData }\n"]},"metadata":{},"sourceType":"module"}