{"ast":null,"code":"import web3 from './web3';\n\nconst Campaign = require('./build/Campaign.json'); //2.\n//create an instance of of contract\n//3\n//go to remix to  deploy initial instance with address\n\n\nexport default (address => {\n  return new web3.eth.Contract(JSON.parse(Campaign.interface), //individual campaign addresses\n  address);\n});","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/ethereum/campaign.js"],"names":["web3","Campaign","require","address","eth","Contract","JSON","parse","interface"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAxB,C,CAEA;AACA;AACA;AACA;;;AAEA,gBAAgBC,OAAD,IAAa;AAC1B,SAAO,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CACLC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACO,SAApB,CADK,EAEL;AACAL,EAAAA,OAHK,CAAP;AAKD,CAND","sourcesContent":["import web3 from './web3'\nconst Campaign = require('./build/Campaign.json')\n\n//2.\n//create an instance of of contract\n//3\n//go to remix to  deploy initial instance with address\n\nexport default (address) => {\n  return new web3.eth.Contract(\n    JSON.parse(Campaign.interface),\n    //individual campaign addresses\n    address,\n  )\n}\n"]},"metadata":{},"sourceType":"module"}