{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/campaigns/requests/index.js\";\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport { Link } from '../../../routes';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../components/RequestRow';\nexport const getServerSideProps = async context => {\n  const address = context.query.address; // query the data based on the address and return as props\n  // const accounts = await web3.eth.getAccounts()\n\n  const campaign = Campaign(address);\n  const requestCount = await campaign.methods.getRequestsCount().call(); //index of 1 - > iterate\n  //array.fill -> gives a list of all indicies\n\n  const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n    return campaign.methods.requests(index).call();\n  }));\n  let {\n    description,\n    value,\n    recipient,\n    approvalCount\n  } = requests[0]; // console.log(requests)\n\n  return {\n    props: {\n      address,\n      description,\n      value,\n      recipient,\n      approvalCount,\n      requestCount\n    }\n  };\n};\nexport default class Requests extends Component {\n  renderRow() {\n    return this.props.requests.map((request, index) => {\n      return /*#__PURE__*/_jsxDEV(RequestRow, {\n        request: request,\n        address: this.props.address\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      HeaderCell,\n      Row,\n      HeaderCellCell,\n      Body\n    } = Table;\n    console.log(this.props.description);\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Requests \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Approval Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Approve \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(HeaderCell, {\n            children: \"Finalize \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Body, {\n          children: this.renderRow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        route: `/campaigns/${this.props.address}/requests/new`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            labelPosition: \"left\",\n            content: \"New Request\",\n            icon: \"add\",\n            primary: true,\n            floated: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/campaigns/requests/index.js"],"names":["React","Component","Button","Table","Layout","Link","Campaign","RequestRow","getServerSideProps","context","address","query","campaign","requestCount","methods","getRequestsCount","call","requests","Promise","all","Array","parseInt","fill","map","element","index","description","value","recipient","approvalCount","props","Requests","renderRow","request","render","HeaderCell","Row","HeaderCellCell","Body","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Table } from 'semantic-ui-react'\nimport Layout from '../../components/Layout'\nimport { Link } from '../../../routes'\nimport Campaign from '../../../ethereum/campaign'\nimport RequestRow from '../../components/RequestRow'\nexport const getServerSideProps = async (context) => {\n  const address = context.query.address\n  // query the data based on the address and return as props\n  // const accounts = await web3.eth.getAccounts()\n\n  const campaign = Campaign(address)\n  const requestCount = await campaign.methods.getRequestsCount().call()\n\n  //index of 1 - > iterate\n  //array.fill -> gives a list of all indicies\n  const requests = await Promise.all(\n    Array(parseInt(requestCount))\n      .fill()\n      .map((element, index) => {\n        return campaign.methods.requests(index).call()\n      }),\n  )\n  let { description, value, recipient, approvalCount } = requests[0]\n  // console.log(requests)\n\n  return {\n    props: {\n      address,\n      description,\n      value,\n      recipient,\n      approvalCount,\n      requestCount,\n    },\n  }\n}\n\nexport default class Requests extends Component {\n  renderRow() {\n    return this.props.requests.map((request, index) => {\n      return (\n        <RequestRow\n          key={index}\n          request={request}\n          address={this.props.address}\n        ></RequestRow>\n      )\n    })\n  }\n\n  render() {\n    const { HeaderCell, Row, HeaderCellCell, Body } = Table\n    console.log(this.props.description)\n    return (\n      <Layout>\n        <h3> Requests </h3>\n\n        <Table>\n          <Row>\n            <HeaderCell>ID</HeaderCell> <HeaderCell>Description</HeaderCell>\n            <HeaderCell>Amount</HeaderCell> <HeaderCell>Recipient</HeaderCell>\n            <HeaderCell>Approval Count</HeaderCell>\n            <HeaderCell>Approve </HeaderCell> <HeaderCell>Finalize </HeaderCell>\n          </Row>\n\n          <Body>{this.renderRow()}</Body>\n        </Table>\n        <Link route={`/campaigns/${this.props.address}/requests/new`}>\n          <a>\n            <Button\n              labelPosition=\"left\"\n              content=\"New Request\"\n              icon=\"add\"\n              primary\n              floated=\"right\"\n            />\n          </a>\n        </Link>\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}