{"ast":null,"code":"import _regeneratorRuntime from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3'; //1\n//configure web3 with metamask\n// const web3 = new Web3(window.ethereum)\n// window.ethereum.enable()\n\nvar web3;\nwindow.addEventListener('load', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!window.ethereum) {\n            _context.next = 12;\n            break;\n          }\n\n          window.web3 = new Web3(ethereum);\n          _context.prev = 2;\n          _context.next = 5;\n          return ethereum.enable();\n\n        case 5:\n          // Acccounts now exposed\n          web3.eth.sendTransaction({\n            /* ... */\n          });\n          _context.next = 10;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 10:\n          _context.next = 13;\n          break;\n\n        case 12:\n          // Legacy dapp browsers...\n          if (window.web3) {\n            window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n            web3.eth.sendTransaction({\n              /* ... */\n            });\n          } // Non-dapp browsers...\n          else {\n              console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 8]]);\n})));\nexport default web3;","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/ethereum/web3.js"],"names":["Web3","web3","window","addEventListener","ethereum","enable","eth","sendTransaction","currentProvider","console","log"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CACA;AACA;AACA;AAEA;;AAEA,IAAIC,IAAJ;AAEAC,MAAM,CAACC,gBAAP,CAAwB,MAAxB,wEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,eAE1BD,MAAM,CAACE,QAFmB;AAAA;AAAA;AAAA;;AAG5BF,UAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASI,QAAT,CAAd;AAH4B;AAAA;AAAA,iBAMpBA,QAAQ,CAACC,MAAT,EANoB;;AAAA;AAO1B;AACAJ,UAAAA,IAAI,CAACK,GAAL,CAASC,eAAT,CAAyB;AACvB;AADuB,WAAzB;AAR0B;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAe9B;AACK,cAAIL,MAAM,CAACD,IAAX,EAAiB;AACpBC,YAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASC,IAAI,CAACO,eAAd,CAAd,CADoB,CAEpB;;AACAP,YAAAA,IAAI,CAACK,GAAL,CAASC,eAAT,CAAyB;AACvB;AADuB,aAAzB;AAGD,WANI,CAOL;AAPK,eAQA;AACHE,cAAAA,OAAO,CAACC,GAAR,CACE,qEADF;AAGD;;AA5B6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;AA+BA,eAAeT,IAAf","sourcesContent":["import Web3 from 'web3'\n//1\n//configure web3 with metamask\n// const web3 = new Web3(window.ethereum)\n\n// window.ethereum.enable()\n\nlet web3\n\nwindow.addEventListener('load', async () => {\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.web3 = new Web3(ethereum)\n    try {\n      // Request account access if needed\n      await ethereum.enable()\n      // Acccounts now exposed\n      web3.eth.sendTransaction({\n        /* ... */\n      })\n    } catch (error) {\n      // User denied account access...\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    window.web3 = new Web3(web3.currentProvider)\n    // Acccounts always exposed\n    web3.eth.sendTransaction({\n      /* ... */\n    })\n  }\n  // Non-dapp browsers...\n  else {\n    console.log(\n      'Non-Ethereum browser detected. You should consider trying MetaMask!',\n    )\n  }\n})\n\nexport default web3\n"]},"metadata":{},"sourceType":"module"}