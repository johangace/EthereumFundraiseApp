{"ast":null,"code":"// const baseUrl = process.env.BASE_URL\nconst baseUrl = 'https://3k8qtydd9g.execute-api.us-east-1.amazonaws.com/';\n\nasync function fetchQuery(path, params = null) {\n  let url;\n\n  if (params !== null) {\n    url = `${baseUrl}/${path}/${params}`;\n  } else {\n    url = `${baseUrl}/${path}`;\n  }\n\n  const response = await fetch(`${url}`);\n  const data = await response.json();\n  return data;\n}\n\nasync function postData(data = {}) {\n  // Default options are marked with *\n  const response = await fetch('https://3k8qtydd9g.execute-api.us-east-1.amazonaws.com/items', {\n    method: 'PUT',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'no-cors',\n    // no-cors, *cors, same-origin\n    cache: 'no-cache',\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin',\n    // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    redirect: 'follow',\n    // manual, *follow, error\n    referrerPolicy: 'no-referrer',\n    // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // b\n\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n} // postData('https://example.com/answer', { answer: 42 }).then((data) => {\n//   console.log(data) // JSON data parsed by `data.json()` call\n// })\n\n\nexport { baseUrl, fetchQuery, postData };","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/utils.js"],"names":["baseUrl","fetchQuery","path","params","url","response","fetch","data","json","postData","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,yDAAhB;;AACA,eAAeC,UAAf,CAA0BC,IAA1B,EAAgCC,MAAM,GAAG,IAAzC,EAA+C;AAC7C,MAAIC,GAAJ;;AACA,MAAID,MAAM,KAAK,IAAf,EAAqB;AACnBC,IAAAA,GAAG,GAAI,GAAEJ,OAAQ,IAAGE,IAAK,IAAGC,MAAO,EAAnC;AACD,GAFD,MAEO;AACLC,IAAAA,GAAG,GAAI,GAAEJ,OAAQ,IAAGE,IAAK,EAAzB;AACD;;AACD,QAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,GAAI,EAAR,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAOD,IAAP;AACD;;AAED,eAAeE,QAAf,CAAwBF,IAAI,GAAG,EAA/B,EAAmC;AACjC;AACA,QAAMF,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAD0B,EAE1B;AACEI,IAAAA,MAAM,EAAE,KADV;AACiB;AACfC,IAAAA,IAAI,EAAE,SAFR;AAEmB;AACjBC,IAAAA,KAAK,EAAE,UAHT;AAGqB;AACnBC,IAAAA,WAAW,EAAE,aAJf;AAI8B;AAC5BC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT,CAEP;;AAFO,KALX;AASEC,IAAAA,QAAQ,EAAE,QATZ;AASsB;AACpBC,IAAAA,cAAc,EAAE,aAVlB;AAUiC;AAC/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAXR,CAW8B;;AAX9B,GAF0B,CAA5B;AAgBA,SAAOF,QAAQ,CAACG,IAAT,EAAP,CAlBiC,CAkBV;AACxB,C,CAED;AACA;AACA;;;AAEA,SAASR,OAAT,EAAkBC,UAAlB,EAA8BQ,QAA9B","sourcesContent":["// const baseUrl = process.env.BASE_URL\nconst baseUrl = 'https://3k8qtydd9g.execute-api.us-east-1.amazonaws.com/'\nasync function fetchQuery(path, params = null) {\n  let url\n  if (params !== null) {\n    url = `${baseUrl}/${path}/${params}`\n  } else {\n    url = `${baseUrl}/${path}`\n  }\n  const response = await fetch(`${url}`)\n  const data = await response.json()\n  return data\n}\n\nasync function postData(data = {}) {\n  // Default options are marked with *\n  const response = await fetch(\n    'https://3k8qtydd9g.execute-api.us-east-1.amazonaws.com/items',\n    {\n      method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n      mode: 'no-cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data), // b\n    },\n  )\n  return response.json() // parses JSON response into native JavaScript objects\n}\n\n// postData('https://example.com/answer', { answer: 42 }).then((data) => {\n//   console.log(data) // JSON data parsed by `data.json()` call\n// })\n\nexport { baseUrl, fetchQuery, postData }\n"]},"metadata":{},"sourceType":"module"}