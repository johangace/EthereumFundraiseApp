{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/campaigns/show.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\nexport const getServerSideProps = async context => {\n  const campaignAddress = context.query.address; // query the data based on the address and return as props\n\n  const campaign = Campaign(campaignAddress);\n  const summary = await campaign.methods.getSummary().call();\n  return {\n    props: {\n      campaignAddress,\n      minimumContribution: summary[0],\n      balance: summary[0],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    } // queried data\n\n  };\n};\nexport default function CampaignShow(props) {\n  const {\n    campaignAddress,\n    minimumContribution,\n    balance,\n    requestCount,\n    approversCount,\n    manager\n  } = props;\n\n  function renderCards() {\n    const items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create spending/withdraw requests',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: balance,\n      meta: 'Minimum contribution to the campaign',\n      description: 'Minimum amount of ETH allowed  '\n    }, {\n      header: requestCount,\n      meta: 'Minimum contribution to the campaign',\n      description: 'Minimum amount of ETH allowed  '\n    }, {\n      header: approversCount,\n      meta: 'Minimum contribution to the campaign',\n      description: 'Minimum amount of ETH allowed  '\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [campaignAddress, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), renderCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n} // export default class CampaignShow extends Component {\n//   constructor(props) {\n//     super(props)\n//   }\n//   renderCards() {\n//     const items = [\n//       {\n//         header: manager,\n//         meta: 'Address of Manager',\n//         description:\n//           'The manager created this campaign and can create spending/withdraw requests',\n//       },\n//       {\n//         header: minimumContribution,\n//         meta: 'Minimum contribution to the campaign',\n//       },\n//     ]\n//     return <Card.Group items={items} />\n//   }\n//   render() {\n//     return (\n//       <Layout>\n//         <h1>{this.campaignAddress} </h1>\n//         {/* Campaign Minimum: {minimumContribution}\n//         Balance: {balance}\n//         Requests: {requestCount}\n//         Approvers: {approversCount}\n//         Manager: {manager} */}\n//         {this.renderCards()}\n//       </Layout>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","getServerSideProps","context","campaignAddress","query","address","campaign","summary","methods","getSummary","call","props","minimumContribution","balance","requestCount","approversCount","manager","CampaignShow","renderCards","items","header","meta","description","style","overflowWrap"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AACnD,QAAMC,eAAe,GAAGD,OAAO,CAACE,KAAR,CAAcC,OAAtC,CADmD,CAEnD;;AACA,QAAMC,QAAQ,GAAGP,QAAQ,CAACI,eAAD,CAAzB;AAEA,QAAMI,OAAO,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLR,MAAAA,eADK;AAELS,MAAAA,mBAAmB,EAAEL,OAAO,CAAC,CAAD,CAFvB;AAGLM,MAAAA,OAAO,EAAEN,OAAO,CAAC,CAAD,CAHX;AAILO,MAAAA,YAAY,EAAEP,OAAO,CAAC,CAAD,CAJhB;AAKLQ,MAAAA,cAAc,EAAER,OAAO,CAAC,CAAD,CALlB;AAMLS,MAAAA,OAAO,EAAET,OAAO,CAAC,CAAD;AANX,KADF,CASL;;AATK,GAAP;AAWD,CAlBM;AAoBP,eAAe,SAASU,YAAT,CAAsBN,KAAtB,EAA6B;AAC1C,QAAM;AACJR,IAAAA,eADI;AAEJS,IAAAA,mBAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA;AANI,MAOFL,KAPJ;;AAQA,WAASO,WAAT,GAAuB;AACrB,UAAMC,KAAK,GAAG,CACZ;AACEC,MAAAA,MAAM,EAAEJ,OADV;AAEEK,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,WAAW,EACT,6EAJJ;AAKEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AALT,KADY,EAQZ;AACEJ,MAAAA,MAAM,EAAEP,OADV;AAEEQ,MAAAA,IAAI,EAAE,sCAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KARY,EAcZ;AACEF,MAAAA,MAAM,EAAEN,YADV;AAEEO,MAAAA,IAAI,EAAE,sCAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAdY,EAmBZ;AACEF,MAAAA,MAAM,EAAEL,cADV;AAEEM,MAAAA,IAAI,EAAE,sCAFR;AAGEC,MAAAA,WAAW,EAAE;AAHf,KAnBY,CAAd;AAyBA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA,iBAAKhB,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGe,WAAW,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport Campaign from '../../ethereum/campaign'\nimport { Card } from 'semantic-ui-react'\n\nexport const getServerSideProps = async (context) => {\n  const campaignAddress = context.query.address\n  // query the data based on the address and return as props\n  const campaign = Campaign(campaignAddress)\n\n  const summary = await campaign.methods.getSummary().call()\n\n  return {\n    props: {\n      campaignAddress,\n      minimumContribution: summary[0],\n      balance: summary[0],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    },\n    // queried data\n  }\n}\n\nexport default function CampaignShow(props) {\n  const {\n    campaignAddress,\n    minimumContribution,\n    balance,\n    requestCount,\n    approversCount,\n    manager,\n  } = props\n  function renderCards() {\n    const items = [\n      {\n        header: manager,\n        meta: 'Address of Manager',\n        description:\n          'The manager created this campaign and can create spending/withdraw requests',\n        style: { overflowWrap: 'break-word' },\n      },\n      {\n        header: balance,\n        meta: 'Minimum contribution to the campaign',\n        description: 'Minimum amount of ETH allowed  ',\n      },\n\n      {\n        header: requestCount,\n        meta: 'Minimum contribution to the campaign',\n        description: 'Minimum amount of ETH allowed  ',\n      },\n      {\n        header: approversCount,\n        meta: 'Minimum contribution to the campaign',\n        description: 'Minimum amount of ETH allowed  ',\n      },\n    ]\n    return <Card.Group items={items} />\n  }\n\n  return (\n    <Layout>\n      <h1>{campaignAddress} </h1>\n\n      {renderCards()}\n    </Layout>\n  )\n}\n\n// export default class CampaignShow extends Component {\n//   constructor(props) {\n//     super(props)\n//   }\n\n//   renderCards() {\n//     const items = [\n//       {\n//         header: manager,\n//         meta: 'Address of Manager',\n//         description:\n//           'The manager created this campaign and can create spending/withdraw requests',\n//       },\n\n//       {\n//         header: minimumContribution,\n//         meta: 'Minimum contribution to the campaign',\n//       },\n//     ]\n//     return <Card.Group items={items} />\n//   }\n\n//   render() {\n//     return (\n//       <Layout>\n//         <h1>{this.campaignAddress} </h1>\n//         {/* Campaign Minimum: {minimumContribution}\n//         Balance: {balance}\n//         Requests: {requestCount}\n//         Approvers: {approversCount}\n//         Manager: {manager} */}\n//         {this.renderCards()}\n//       </Layout>\n//     )\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}