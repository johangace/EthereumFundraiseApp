{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/campaigns/show.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\nexport const getServerSideProps = async context => {\n  const campaignAddress = context.query.address; // query the data based on the address and return as props\n\n  const campaign = Campaign(campaignAddress);\n  const summary = await campaign.methods.getSummary().call();\n  return {\n    props: {\n      campaignAddress,\n      minimumContribution: summary[0],\n      balance: summary[0],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    } // queried data\n\n  };\n};\nexport default class CampaignShow extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      campaignAddress,\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = this.props;\n  }\n\n  render() {\n    function renderCards() {\n      const items = [{\n        header: manager,\n        meta: 'Address of Manager',\n        description: 'The manager created this campaign and can create spending/withdraw requests'\n      }, {\n        header: minimumContribution,\n        meta: 'Minimum contribution to the campaign'\n      }];\n      return /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [campaignAddress, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), this.renderCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","getServerSideProps","context","campaignAddress","query","address","campaign","summary","methods","getSummary","call","props","minimumContribution","balance","requestCount","approversCount","manager","CampaignShow","constructor","render","renderCards","items","header","meta","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AACnD,QAAMC,eAAe,GAAGD,OAAO,CAACE,KAAR,CAAcC,OAAtC,CADmD,CAEnD;;AACA,QAAMC,QAAQ,GAAGP,QAAQ,CAACI,eAAD,CAAzB;AAEA,QAAMI,OAAO,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLR,MAAAA,eADK;AAELS,MAAAA,mBAAmB,EAAEL,OAAO,CAAC,CAAD,CAFvB;AAGLM,MAAAA,OAAO,EAAEN,OAAO,CAAC,CAAD,CAHX;AAILO,MAAAA,YAAY,EAAEP,OAAO,CAAC,CAAD,CAJhB;AAKLQ,MAAAA,cAAc,EAAER,OAAO,CAAC,CAAD,CALlB;AAMLS,MAAAA,OAAO,EAAET,OAAO,CAAC,CAAD;AANX,KADF,CASL;;AATK,GAAP;AAWD,CAlBM;AAmBP,eAAe,MAAMU,YAAN,SAA2BpB,SAA3B,CAAqC;AAClDqB,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAM;AACJR,MAAAA,eADI;AAEJS,MAAAA,mBAFI;AAGJC,MAAAA,OAHI;AAIJC,MAAAA,YAJI;AAKJC,MAAAA,cALI;AAMJC,MAAAA;AANI,QAOF,KAAKL,KAPT;AAQD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,aAASC,WAAT,GAAuB;AACrB,YAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEN,OADV;AAEEO,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OADY,EAQZ;AACEF,QAAAA,MAAM,EAAEV,mBADV;AAEEW,QAAAA,IAAI,EAAE;AAFR,OARY,CAAd;AAaA,0BAAO,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE,QAAC,MAAD;AAAA,8BACE;AAAA,mBAAKlB,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOG,KAAKiB,WAAL,EAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA1CiD","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport Campaign from '../../ethereum/campaign'\nimport { Card } from 'semantic-ui-react'\n\nexport const getServerSideProps = async (context) => {\n  const campaignAddress = context.query.address\n  // query the data based on the address and return as props\n  const campaign = Campaign(campaignAddress)\n\n  const summary = await campaign.methods.getSummary().call()\n\n  return {\n    props: {\n      campaignAddress,\n      minimumContribution: summary[0],\n      balance: summary[0],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    },\n    // queried data\n  }\n}\nexport default class CampaignShow extends Component {\n  constructor(props) {\n    super(props)\n    const {\n      campaignAddress,\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager,\n    } = this.props\n  }\n\n  render() {\n    function renderCards() {\n      const items = [\n        {\n          header: manager,\n          meta: 'Address of Manager',\n          description:\n            'The manager created this campaign and can create spending/withdraw requests',\n        },\n\n        {\n          header: minimumContribution,\n          meta: 'Minimum contribution to the campaign',\n        },\n      ]\n      return <Card.Group items={items} />\n    }\n\n    return (\n      <Layout>\n        <h1>{campaignAddress} </h1>\n        {/* Campaign Minimum: {minimumContribution}\n        Balance: {balance}\n        Requests: {requestCount}\n        Approvers: {approversCount}\n        Manager: {manager} */}\n        {this.renderCards()}\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}