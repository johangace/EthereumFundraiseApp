{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from 'semantic-ui-react';\nimport Layout from './components/Layout';\nimport { Link } from '../routes';\nimport db from '../db';\nimport { json } from 'body-parser';\nexport async function getStaticProps(context) {\n  const campaigns = await factory.methods.getDeployedCampaigns().call();\n\n  if (!campaigns) {\n    return {\n      notFound: true\n    };\n  }\n\n  const params = {\n    TableName: 'leaper',\n    Key: {\n      CustomerId: 1\n    }\n  };\n  let Thedata = {};\n  await db.get(params, function (err, data) {\n    if (err) {\n      console.log('Error', err);\n    } else {\n      // send the json response from the callback\n      // console.log(data.Item.Location)\n      console.log(Thedata);\n      Thedata = JSON.parse(JSON.stringify(_objectSpread({}, data.Item)));\n    }\n  });\n  return {\n    // will be passed to the page component as props\n    props: {\n      campaigns\n    }\n  }; // - At most once every second\n  //, revalidate: 1, // In seconds\n}\nexport default class CampaignIndex extends Component {\n  renderCampaigns() {\n    const items = this.props.campaigns.map(address => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(Link, {\n          route: `/campaigns/${address}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \" View Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      style: {\n        overflowWrap: 'break-word'\n      },\n      items: items\n    }, items.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    console.log(this.props.plainData);\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Open Campaigns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), this.props.Data, /*#__PURE__*/_jsxDEV(Link, {\n          route: \"/campaigns/new\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              labelPosition: \"left\",\n              content: \"Create a Campaign\",\n              icon: \"add\",\n              primary: true,\n              floated: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), this.renderCampaigns(), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","Link","db","json","getStaticProps","context","campaigns","methods","getDeployedCampaigns","call","notFound","params","TableName","Key","CustomerId","Thedata","get","err","data","console","log","JSON","parse","stringify","Item","props","CampaignIndex","renderCampaigns","items","map","address","header","description","fluid","overflowWrap","render","plainData","Data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport factory from '../ethereum/factory'\nimport { Card, Button } from 'semantic-ui-react'\nimport Layout from './components/Layout'\nimport { Link } from '../routes'\nimport db from '../db'\nimport { json } from 'body-parser'\n\nexport async function getStaticProps(context) {\n  const campaigns = await factory.methods.getDeployedCampaigns().call()\n\n  if (!campaigns) {\n    return {\n      notFound: true,\n    }\n  }\n\n  const params = {\n    TableName: 'leaper',\n    Key: {\n      CustomerId: 1,\n    },\n  }\n\n  let Thedata = {}\n  await db.get(params, function (err, data) {\n    if (err) {\n      console.log('Error', err)\n    } else {\n      // send the json response from the callback\n      // console.log(data.Item.Location)\n\n      console.log(Thedata)\n      Thedata = JSON.parse(JSON.stringify({ ...data.Item }))\n    }\n  })\n\n  return {\n    // will be passed to the page component as props\n    props: { campaigns },\n  }\n  // - At most once every second\n  //, revalidate: 1, // In seconds\n}\n\nexport default class CampaignIndex extends Component {\n  renderCampaigns() {\n    const items = this.props.campaigns.map((address) => {\n      return {\n        header: address,\n        description: (\n          <Link route={`/campaigns/${address}`}>\n            <a> View Campaign</a>\n          </Link>\n        ),\n        fluid: true,\n      }\n    })\n    return (\n      <Card.Group\n        style={{ overflowWrap: 'break-word' }}\n        key={items.address}\n        items={items}\n      />\n    )\n  }\n  render() {\n    console.log(this.props.plainData)\n    return (\n      <Layout>\n        {' '}\n        <div>\n          <h3> Open Campaigns</h3>\n          {this.props.Data}\n          <Link route=\"/campaigns/new\">\n            <a>\n              <Button\n                labelPosition=\"left\"\n                content=\"Create a Campaign\"\n                icon=\"add\"\n                primary\n                floated=\"right\"\n              />\n            </a>\n          </Link>\n        </div>\n        {this.renderCampaigns()}{' '}\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}