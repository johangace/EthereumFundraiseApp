{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/index.js\";\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, Button } from 'semantic-ui-react';\nimport Layout from './components/Layout';\nimport { Link } from '../routes';\nimport db from '../db';\nimport { json } from 'body-parser'; // export async function fetcher(req, res) {\n//   // const id = req.query.id\n//   // filter API requests by method\n//   // Allow a blog post to get its number of likes and views\n//   const params = {\n//     TableName: 'leaper',\n//     Key: {\n//       CustomerId: 1,\n//     },\n//   }\n//   db.get(params, function (err, data) {\n//     if (err) {\n//       console.log('Error', err)\n//     } else {\n//       // send the json response from the callback\n//       // console.log(data)\n//       return data\n//     }\n//   })\n// }\n\nexport async function getStaticProps(context) {\n  const campaigns = await factory.methods.getDeployedCampaigns().call();\n\n  if (!campaigns) {\n    return {\n      notFound: true\n    };\n  }\n\n  async function myFunction() {\n    const res = await fetcher();\n    return res; // do whatever you need with vm.feed below\n  }\n\n  const params = {\n    TableName: 'leaper',\n    Key: {\n      CustomerId: 1\n    }\n  };\n  let Thedata = {};\n  let TheMain = db.get(params, function (err, data) {\n    if (err) {\n      console.log('Error', err);\n    } else {\n      // send the json response from the callback\n      let thedata = data.Item;\n      console.log(data.Item);\n      return JSON.parse(JSON.stringify(data.Item)); // data.Item\n    }\n  });\n  console.log('fetchy:', myFunction());\n  return {\n    // will be passed to the page component as props\n    props: {\n      campaigns\n    }\n  }; // - At most once every second\n  //, revalidate: 1, // In seconds\n}\nexport default class CampaignIndex extends Component {\n  renderCampaigns() {\n    const items = this.props.campaigns.map(address => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(Link, {\n          route: `/campaigns/${address}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \" View Campaign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      style: {\n        overflowWrap: 'break-word'\n      },\n      items: items\n    }, items.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    // console.log(this.props.Thedata)\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Open Campaigns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), this.props.Data, /*#__PURE__*/_jsxDEV(Link, {\n          route: \"/campaigns/new\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              labelPosition: \"left\",\n              content: \"Create a Campaign\",\n              icon: \"add\",\n              primary: true,\n              floated: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), this.renderCampaigns(), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/index.js"],"names":["React","Component","factory","Card","Button","Layout","Link","db","json","getStaticProps","context","campaigns","methods","getDeployedCampaigns","call","notFound","myFunction","res","fetcher","params","TableName","Key","CustomerId","Thedata","TheMain","get","err","data","console","log","thedata","Item","JSON","parse","stringify","props","CampaignIndex","renderCampaigns","items","map","address","header","description","fluid","overflowWrap","render","Data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport factory from '../ethereum/factory'\nimport { Card, Button } from 'semantic-ui-react'\nimport Layout from './components/Layout'\nimport { Link } from '../routes'\nimport db from '../db'\nimport { json } from 'body-parser'\n\n// export async function fetcher(req, res) {\n//   // const id = req.query.id\n//   // filter API requests by method\n\n//   // Allow a blog post to get its number of likes and views\n//   const params = {\n//     TableName: 'leaper',\n//     Key: {\n//       CustomerId: 1,\n//     },\n//   }\n\n//   db.get(params, function (err, data) {\n//     if (err) {\n//       console.log('Error', err)\n//     } else {\n//       // send the json response from the callback\n//       // console.log(data)\n//       return data\n//     }\n//   })\n// }\n\nexport async function getStaticProps(context) {\n  const campaigns = await factory.methods.getDeployedCampaigns().call()\n\n  if (!campaigns) {\n    return {\n      notFound: true,\n    }\n  }\n\n  async function myFunction() {\n    const res = await fetcher()\n    return res\n    // do whatever you need with vm.feed below\n  }\n\n  const params = {\n    TableName: 'leaper',\n    Key: {\n      CustomerId: 1,\n    },\n  }\n\n  let Thedata = {}\n  let TheMain = db.get(params, function (err, data) {\n    if (err) {\n      console.log('Error', err)\n    } else {\n      // send the json response from the callback\n      let thedata = data.Item\n      console.log(data.Item)\n      return JSON.parse(JSON.stringify(data.Item))\n      // data.Item\n    }\n  })\n\n  console.log('fetchy:', myFunction())\n  return {\n    // will be passed to the page component as props\n    props: { campaigns },\n  }\n  // - At most once every second\n  //, revalidate: 1, // In seconds\n}\n\nexport default class CampaignIndex extends Component {\n  renderCampaigns() {\n    const items = this.props.campaigns.map((address) => {\n      return {\n        header: address,\n        description: (\n          <Link route={`/campaigns/${address}`}>\n            <a> View Campaign</a>\n          </Link>\n        ),\n        fluid: true,\n      }\n    })\n    return (\n      <Card.Group\n        style={{ overflowWrap: 'break-word' }}\n        key={items.address}\n        items={items}\n      />\n    )\n  }\n  render() {\n    // console.log(this.props.Thedata)\n    return (\n      <Layout>\n        {' '}\n        <div>\n          <h3> Open Campaigns</h3>\n          {this.props.Data}\n          <Link route=\"/campaigns/new\">\n            <a>\n              <Button\n                labelPosition=\"left\"\n                content=\"Create a Campaign\"\n                icon=\"add\"\n                primary\n                floated=\"right\"\n              />\n            </a>\n          </Link>\n        </div>\n        {this.renderCampaigns()}{' '}\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}