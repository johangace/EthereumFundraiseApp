{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar RequestRow = /*#__PURE__*/function (_Component) {\n  _inherits(RequestRow, _Component);\n\n  var _super = _createSuper(RequestRow);\n\n  function RequestRow(props) {\n    var _this;\n\n    _classCallCheck(this, RequestRow);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handler\", function () {\n      _this.setState();\n    });\n\n    _this.state = {};\n    _this.handleEvent = _this.handleEvent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RequestRow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevState.name !== this.state.name) {\n        this.handler();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {} // Prototype methods, Bind in Constructor (ES2015)\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent() {} // Class Properties (Stage 3 Proposal)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"hellooo\"\n      }, void 0, false);\n    }\n  }]);\n\n  return RequestRow;\n}(Component);\n\nexport { RequestRow as default };","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/components/RequestRow.js"],"names":["React","Component","RequestRow","props","setState","state","handleEvent","bind","prevProps","prevState","snapshot","name","handler"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,8DAsBT,YAAM;AACd,YAAKC,QAAL;AACD,KAxBkB;;AAGjB,UAAKC,KAAL,GAAa,EAAb;AAEA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AALiB;AAMlB;;;;wCAEmB,CAAE;;;uCAEHC,S,EAAWC,S,EAAWC,Q,EAAU;AACjD,UAAID,SAAS,CAACE,IAAV,KAAmB,KAAKN,KAAL,CAAWM,IAAlC,EAAwC;AACtC,aAAKC,OAAL;AACD;AACF;;;2CAEsB,CAAE,C,CAEzB;;;;kCACc,CAAE,C,CAEhB;;;;6BAKS;AACP,0BAAO;AAAA;AAAA,uBAAP;AACD;;;;EA7BqCX,S;;SAAnBC,U","sourcesContent":["import React, { Component } from 'react'\n\nexport default class RequestRow extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n\n    this.handleEvent = this.handleEvent.bind(this)\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.name !== this.state.name) {\n      this.handler()\n    }\n  }\n\n  componentWillUnmount() {}\n\n  // Prototype methods, Bind in Constructor (ES2015)\n  handleEvent() {}\n\n  // Class Properties (Stage 3 Proposal)\n  handler = () => {\n    this.setState()\n  }\n\n  render() {\n    return <>hellooo</>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}