{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/campaigns/show.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nexport default class CampaignShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getServerSideProps\", async context => {\n      // you also have access to the param postId from the context\n      const postId = context.params.address;\n      console.log(postID); // query the data based on the postId and return as props\n\n      return {\n        props: {\n          postId\n        } // queried data\n\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [this.props.pid, \"Campaigns show\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","CampaignShow","context","postId","params","address","console","log","postID","props","render","pid"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;;AAAA,gDAC7B,MAAOG,OAAP,IAAmB;AACtC;AACA,YAAMC,MAAM,GAAGD,OAAO,CAACE,MAAR,CAAeC,OAA9B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAHsC,CAItC;;AACA,aAAO;AACLC,QAAAA,KAAK,EAAE;AAAEN,UAAAA;AAAF,SADF,CACc;;AADd,OAAP;AAGD,KATiD;AAAA;;AAUlDO,EAAAA,MAAM,GAAG;AACP,wBAAO,QAAC,MAAD;AAAA,iBAAS,KAAKD,KAAL,CAAWE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAZiD","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout'\n\nexport default class CampaignShow extends Component {\n  getServerSideProps = async (context) => {\n    // you also have access to the param postId from the context\n    const postId = context.params.address\n    console.log(postID)\n    // query the data based on the postId and return as props\n    return {\n      props: { postId }, // queried data\n    }\n  }\n  render() {\n    return <Layout>{this.props.pid}Campaigns show</Layout>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}