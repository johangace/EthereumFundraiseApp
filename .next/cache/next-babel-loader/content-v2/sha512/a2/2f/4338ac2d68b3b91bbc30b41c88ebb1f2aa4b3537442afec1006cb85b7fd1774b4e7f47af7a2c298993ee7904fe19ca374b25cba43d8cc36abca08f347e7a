{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johan/Desktop/kickstart/pages/campaigns/new.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nexport default class CampaignNew extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: '',\n        successMessage: '',\n        loadingMessage: 'Working on your request...'\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await postData({\n          id: accounts[0],\n          description: this.state.description\n        });\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          //metamask calculates gas\n          from: accounts[0]\n        });\n        this.setState({\n          successMessage: 'Your Transaction was completed'\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      minimumContribution: '',\n      errorMessage: '',\n      loading: false,\n      successMessage: '',\n      loadingMessage: '',\n      description: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Create New Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form //returns double oposite => truthy\n      , {\n        loading: !!this.state.loading,\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        success: !!this.state.successMessage,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Minimum Contribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"wei\",\n            labelPosition: \"right\",\n            value: this.state.minimumContribution,\n            onChange: event => this.setState({\n              minimumContribution: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"wei\",\n            labelPosition: \"right\",\n            value: this.state.description,\n            onChange: event => this.setState({\n              minimumContribution: event.target.description\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          loading: this.state.loading,\n          primary: true,\n          children: [' ', \"Create!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          success: true,\n          header: \"Success!!\",\n          content: this.state.successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), this.state.loading && /*#__PURE__*/_jsxDEV(Message, {\n        header: this.state.loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/campaigns/new.js"],"names":["React","Component","Layout","Form","Button","Input","Message","factory","web3","Router","CampaignNew","constructor","props","event","preventDefault","setState","loading","errorMessage","successMessage","loadingMessage","accounts","eth","getAccounts","postData","id","description","state","methods","createCampaign","minimumContribution","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport { Form, Button, Input, Message } from 'semantic-ui-react'\nimport factory from '../../ethereum/factory'\nimport web3 from '../../ethereum/web3'\nimport { Router } from '../../routes'\n\nexport default class CampaignNew extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      minimumContribution: '',\n      errorMessage: '',\n      loading: false,\n      successMessage: '',\n      loadingMessage: '',\n      description: '',\n    }\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault()\n    this.setState({\n      loading: true,\n      errorMessage: '',\n      successMessage: '',\n      loadingMessage: 'Working on your request...',\n    })\n    try {\n      const accounts = await web3.eth.getAccounts()\n      await postData({\n        id: accounts[0],\n        description: this.state.description,\n      })\n\n      await factory.methods\n        .createCampaign(this.state.minimumContribution)\n        .send({\n          //metamask calculates gas\n          from: accounts[0],\n        })\n      this.setState({ successMessage: 'Your Transaction was completed' })\n\n      Router.pushRoute('/')\n    } catch (err) {\n      this.setState({ errorMessage: err.message })\n    }\n    this.setState({ loading: false })\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3> Create New Campaign</h3>\n        <Form\n          //returns double oposite => truthy\n          loading={!!this.state.loading}\n          onSubmit={this.onSubmit}\n          error={!!this.state.errorMessage}\n          success={!!this.state.successMessage}\n        >\n          <Form.Field>\n            {' '}\n            <label> Minimum Contribution</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.minimumContribution}\n              onChange={(event) =>\n                this.setState({ minimumContribution: event.target.value })\n              }\n            />\n          </Form.Field>\n\n          <Form.Field>\n            {' '}\n            <label> Description</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.description}\n              onChange={(event) =>\n                this.setState({ minimumContribution: event.target.description })\n              }\n            />\n          </Form.Field>\n          <Button loading={this.state.loading} primary>\n            {' '}\n            Create!\n          </Button>\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n\n          <Message\n            success\n            header=\"Success!!\"\n            content={this.state.successMessage}\n          />\n        </Form>\n        {this.state.loading && <Message header={this.state.loadingMessage} />}\n      </Layout>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}