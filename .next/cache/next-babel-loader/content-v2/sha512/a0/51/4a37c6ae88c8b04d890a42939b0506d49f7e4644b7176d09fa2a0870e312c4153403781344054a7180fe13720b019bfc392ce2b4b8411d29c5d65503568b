{"ast":null,"code":"import _regeneratorRuntime from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/johan/Desktop/kickstart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory'; // export default async function getStaticProps(context) {\n//   const campaigns = await factory.methods.getDeployedCampaigns().call()\n//   if (!campaigns) {\n//     return {\n//       notFound: true,\n//     }\n//   }\n//   return {\n//     props: { campaigns },\n//     // will be passed to the page component as props\n//   }\n//   // Next.js will attempt to re-generate the page:\n//   // - When a request comes in\n//   // - At most once every second\n//   //, revalidate: 1, // In seconds\n// }\n\nexport default function getData() {\n  return _getData.apply(this, arguments);\n}\n\nfunction _getData() {\n  _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              campaigns: campaigns\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getData.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/johan/Desktop/kickstart/pages/show.js"],"names":["React","Component","factory","getData","campaigns"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,wBAA8BC,OAA9B;AAAA;AAAA;;;sEAAe;AAAA;AAAA;AAAA;AAAA;AAAA,6CACN;AAAEC,cAAAA,SAAS,EAATA;AAAF,aADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import React, { Component } from 'react'\nimport factory from '../ethereum/factory'\n\n// export default async function getStaticProps(context) {\n//   const campaigns = await factory.methods.getDeployedCampaigns().call()\n\n//   if (!campaigns) {\n//     return {\n//       notFound: true,\n//     }\n//   }\n//   return {\n//     props: { campaigns },\n//     // will be passed to the page component as props\n//   }\n\n//   // Next.js will attempt to re-generate the page:\n//   // - When a request comes in\n//   // - At most once every second\n//   //, revalidate: 1, // In seconds\n// }\nexport default async function getData() {\n  return { campaigns }\n}\n"]},"metadata":{},"sourceType":"module"}