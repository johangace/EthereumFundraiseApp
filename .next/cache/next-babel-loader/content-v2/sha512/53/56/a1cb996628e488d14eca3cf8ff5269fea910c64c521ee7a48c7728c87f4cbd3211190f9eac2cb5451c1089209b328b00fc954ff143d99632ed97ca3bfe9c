{"ast":null,"code":"import Web3 from 'web3';\nimport { OpenSeaPort, Network } from \"opensea-js\"; //1\n\nlet web3;\nexport let openSeaportGate; //check if we running code on server or browser\n\nif (false && window.web3 !== 'undefined' // window.ethereum.isMetaMask\n) {\n    //we in browser with metamask\n    web3 = new Web3(window.ethereum);\n    openSeaportGate = new OpenSeaPort(window.ethereum);\n    console.log('Metamask? ' + window.ethereum.isMetaMask); //   window.ethereum.enable()\n  } else {\n  //we on server or user not running metamask\n  //we access rinkeby network from infura\n  const provider = new Web3.providers.HttpProvider( // 'old during rhythm debate rule sibling romance renew dune fox flight gain',\n  // process.env.INFURARINKEBY,\n  'https://rinkeby.infura.io/v3/c7eafb639f494905b254800f3721cd1f');\n  web3 = new Web3(provider);\n  openSeaportGate = new OpenSeaPort(provider);\n}\n\nexport default web3; // window.addEventListener('load', async () => {\n//   // Modern dapp browsers...\n//   if (window.ethereum) {\n//     window.web3 = new Web3(ethereum)\n//     try {\n//       // Request account access if needed\n//       await ethereum.enable()\n//       // Acccounts now exposed\n//       web3.eth.sendTransaction({\n//         /* ... */\n//       })\n//     } catch (error) {\n//       // User denied account access...\n//     }\n//   }\n//   // Legacy dapp browsers...\n//   else if (window.web3) {\n//     window.web3 = new Web3(web3.currentProvider)\n//     // Acccounts always exposed\n//     web3.eth.sendTransaction({\n//       /* ... */\n//     })\n//   }\n//   // Non-dapp browsers...\n//   else {\n//     console.log(\n//       'Non-Ethereum browser detected. You should consider trying MetaMask!',\n//     )\n//   }\n// })","map":{"version":3,"sources":["/Users/johangace/Desktop/EthereumFundraiseApp-new/ethereum/web3.js"],"names":["Web3","OpenSeaPort","Network","web3","openSeaportGate","window","ethereum","console","log","isMetaMask","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,YAArC,C,CAEA;;AAEA,IAAIC,IAAJ;AACA,OAAO,IAAIC,eAAJ,C,CACP;;AACA,IACE,SACAC,MAAM,CAACF,IAAP,KAAgB,WAFlB,CAGE;AAHF,EAIE;AACA;AACAA,IAAAA,IAAI,GAAG,IAAIH,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAP;AACAF,IAAAA,eAAe,GAAE,IAAIH,WAAJ,CAAgBI,MAAM,CAACC,QAAvB,CAAjB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeH,MAAM,CAACC,QAAP,CAAgBG,UAA3C,EALA,CAMA;AACD,GAXD,MAWO;AACL;AACA;AACA,QAAMC,QAAQ,GAAG,IAAIV,IAAI,CAACW,SAAL,CAAeC,YAAnB,EACf;AACA;AACA,iEAHe,CAAjB;AAKAT,EAAAA,IAAI,GAAG,IAAIH,IAAJ,CAASU,QAAT,CAAP;AACAN,EAAAA,eAAe,GAAE,IAAIH,WAAJ,CAAgBS,QAAhB,CAAjB;AACD;;AAED,eAAeP,IAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Web3 from 'web3'\nimport { OpenSeaPort, Network } from \"opensea-js\";\n\n//1\n\nlet web3\nexport let openSeaportGate\n//check if we running code on server or browser\nif (\n  typeof window !== 'undefined' &&\n  window.web3 !== 'undefined' \n  // window.ethereum.isMetaMask\n) {\n  //we in browser with metamask\n  web3 = new Web3(window.ethereum)\n  openSeaportGate= new OpenSeaPort(window.ethereum);\n\n  console.log('Metamask? ' + window.ethereum.isMetaMask)\n  //   window.ethereum.enable()\n} else {\n  //we on server or user not running metamask\n  //we access rinkeby network from infura\n  const provider = new Web3.providers.HttpProvider(\n    // 'old during rhythm debate rule sibling romance renew dune fox flight gain',\n    // process.env.INFURARINKEBY,\n    'https://rinkeby.infura.io/v3/c7eafb639f494905b254800f3721cd1f',\n  )\n  web3 = new Web3(provider)\n  openSeaportGate= new OpenSeaPort(provider);\n}\n\nexport default web3\n// window.addEventListener('load', async () => {\n//   // Modern dapp browsers...\n//   if (window.ethereum) {\n//     window.web3 = new Web3(ethereum)\n//     try {\n//       // Request account access if needed\n//       await ethereum.enable()\n//       // Acccounts now exposed\n//       web3.eth.sendTransaction({\n//         /* ... */\n//       })\n//     } catch (error) {\n//       // User denied account access...\n//     }\n//   }\n//   // Legacy dapp browsers...\n//   else if (window.web3) {\n//     window.web3 = new Web3(web3.currentProvider)\n//     // Acccounts always exposed\n//     web3.eth.sendTransaction({\n//       /* ... */\n//     })\n//   }\n//   // Non-dapp browsers...\n//   else {\n//     console.log(\n//       'Non-Ethereum browser detected. You should consider trying MetaMask!',\n//     )\n//   }\n// })\n"]},"metadata":{},"sourceType":"module"}